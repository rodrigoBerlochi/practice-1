git clone https://github.com/rodrigoBerlochi/practice-1.git

wip			add .		commit		push
Working Directory	Index		HEAD		remote

git add .
git commit -m "..."
git push
git push --set-upstream origin featureName
git log

git checkout -b featureN 
OR
git branch second
git checkout second

git pull
git merge branchN

git diff sourceB targetB

git log --pretty=oneline
	--author=nn
	--graph

git tag 1.0.0 10firstnumberscommitid

gitk ---- ui 
git config color.ui true

delete:
git checkout master (change first)
git branch -d secondBranch

mixing work from different branches: 
1- merge
2- cherry pick

Tags useful to mark releases
Points to create future branches and fix bugs
git tag
git tag nameN
git checkout -b branchName tagName -> creates a branch at the point of tagName

remote / local
git branch (local)
git branch -r (remotes)
# origin/master  origin/branchName

git fetch origin all
git whatchanged (simil git log?)

# never checkout directly remote branch unless you want troubles
# git fetch update remote tracking branches, not local working branches

# advice to avoid pull if we are not completely sure
git pull = git fetch + git merge

# remote branches
# right process is
git branch myLocalB origin/b
git checkout myLocalB

# work on it and then
git merge origin/b 



